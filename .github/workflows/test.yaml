name: "Test using kind and chart-testing tool"

on:
  - pull_request
permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        kubernetesVersion: ["v1.23.17", "v1.24.15", "v1.25.11", "v1.26.6", "v1.27.3"]
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0

    - name: Fetch history
      run: git fetch --prune --unshallow

    - name: Shellcheck
      uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38 # 2.0.0

    - uses: actions/setup-python@e9aba2c848f5ebd159c070c61ea2c4e2b122355e # v2.3.4
      with:
        python-version: 3.7

    - name: Set up Helm
      uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
      with:
        version: v3.8.0

    - name: Set up chart-testing
      uses: helm/chart-testing-action@e8788873172cb653a90ca2e819d79d65a66d4e76 # v2.4.0

    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed --config 'ct-config.yaml' --target-branch ${{ github.event.pull_request.base.ref }})
        if [[ -n "$changed" ]]; then
          echo "CHANGED=true" >> "$GITHUB_OUTPUT"
        fi

    - name: Run chart-testing (lint)
      id: lint
      run: ct lint --config 'ct-config.yaml'
      if: steps.list-changed.outputs.CHANGED == 'true'

    - name: Install kind
      if: steps.list-changed.outputs.CHANGED == 'true'
      uses: helm/kind-action@dda0770415bac9fc20092cacbc54aa298604d140 # v1.8.0
      with:
        node_image: "kindest/node:${{ matrix.kubernetesVersion }}"
        config: kind-config.yaml
        wait: 600s

    - name: Check kind nodes
      if: steps.list-changed.outputs.CHANGED == 'true'
      run: kubectl describe nodes

    - name: Create pullcreds and license secrets
      if: steps.list-changed.outputs.CHANGED == 'true'
      run: |
        kubectl create namespace anchore
        echo "${ANCHORE_LICENSE}" | base64 --decode > /tmp/anchore-license
        kubectl --namespace anchore create secret generic anchore-enterprise-license --from-file=license.yaml=/tmp/anchore-license
        kubectl --namespace anchore create secret docker-registry anchore-enterprise-pullcreds --docker-server=docker.io --docker-username="${DOCKER_USER}" --docker-password="${DOCKER_PASS}"
      env:
        ANCHORE_LICENSE: ${{ secrets.B64_ANCHORE_LICENSE }}
        DOCKER_USER: ${{ secrets.ANCHORECI_DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.ANCHORECI_DOCKER_PASS }}

    - name: Run chart-testing
      if: steps.list-changed.outputs.CHANGED == 'true'
      run: ct install --config ct-config.yaml
